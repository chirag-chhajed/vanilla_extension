let k=(n=21)=>crypto.getRandomValues(new Uint8Array(n)).reduce((t,e)=>(e&=63,e<36?t+=e.toString(36):e<62?t+=(e-26).toString(36).toUpperCase():e>62?t+="-":t+="_",t),""),l,p=document.querySelector("div.form-container");chrome.runtime.sendMessage({action:"getData"},n=>{n?(console.log("Received data from background:"),l=n,console.log(n),v(l)):console.error("Failed to retrieve data from background")});function V(n){const t=new URL(chrome.runtime.getURL("/_favicon/"));return t.searchParams.set("pageUrl",n),t.searchParams.set("size","32"),t.toString()}async function B(n,t){const e=new AbortController,o=setTimeout(()=>e.abort(),t);try{const a=await fetch(n,{signal:e.signal});return clearTimeout(o),a}catch(a){throw clearTimeout(o),a}}async function _(n){try{const t=await B(n,1e4);if(console.log(t),!t.ok)throw new Error(`HTTP error! Status: ${t.status}`);const e=await t.text(),a=new DOMParser().parseFromString(e,"text/html"),s=a.querySelector("title").textContent,c=a.querySelector('meta[name="description"]'),i=c?c.getAttribute("content"):"";return console.log(s,i),{title:s,description:i}}catch(t){return console.error("Error fetching or parsing content:",t),{title:"",description:""}}}const C=document.getElementById("form"),d=document.getElementById("url"),r=document.getElementById("title"),u=document.getElementById("description"),f=document.getElementById("isPinned");let h;d.addEventListener("input",async function(){clearTimeout(h),h=setTimeout(async()=>{const n=d.value;if(T(n)){const{title:t,description:e}=await _(n);r.value=t,u.value=e}else r.value="",u.value=""},1e3)});function T(n){return/https/i.test(n)}C.addEventListener("submit",function(n){n.preventDefault();const t=d.value,e=r.value,o=u.value,a=f.checked,s=V(t);_(t);const c={id:k(),url:t,titleValue:e,descriptionValue:o,img:s,isPin:a,updatedAt:new Date,createdAt:new Date};chrome.runtime.sendMessage({action:"addData",data:c},i=>{i.success?(console.log("Data added to IndexedDB successfully"),d.value="",r.value="",u.value="",f.checked=!1,chrome.runtime.sendMessage({action:"getData"},m=>{m?(console.log("Received data from background:"),console.log(m),v(m),H("Link added successfully",3e3,"success"),p.classList.toggle("visible")):console.error("Failed to retrieve data from background")})):console.error("Failed to add data to IndexedDB")})});function M(n){console.log("Deleting data with ID:",n),chrome.runtime.sendMessage({action:"deleteData",id:n},t=>{t.success?(console.log("Data deleted successfully"),chrome.runtime.sendMessage({action:"getData"},e=>{e?(console.log("Received data from background:"),l=e,console.log(e),v(l)):console.error("Failed to retrieve data from background")})):console.error("Failed to delete data")})}const y=document.querySelector("body > main"),g=document.querySelector(".update-form-container"),D=document.getElementById("update-url"),L=document.getElementById("update-title"),b=document.getElementById("update-description"),I=document.getElementById("update-isPinned"),E=document.getElementById("update-id");function v(n){const t=n.map(e=>`
      <div class="card">
        <div class="card__img">
          <img src="${e.img}" alt="" />
        </div>
        <div class="card__content">
          <a target="_blank" href="${e.url}" class="card__link"><h3 title="${e.titleValue}" class="card__title">${e.titleValue}</h3></a>
          <p title="${e.descriptionValue}" class="card__description">${e.descriptionValue}</p>
          <div class="card__buttons">
            <button class="card__delete" data-id="${e.id}">
  <svg data-id="${e.id}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <path data-id="${e.id}" d="M7 6V3C7 2.44772 7.44772 2 8 2H16C16.5523 2 17 2.44772 17 3V6H22V8H20V21C20 21.5523 19.5523 22 19 22H5C4.44772 22 4 21.5523 4 21V8H2V6H7ZM9 4V6H15V4H9Z"></path>
  </svg>
</button>
<button class="card__edit" data-id="${e.id}">
  <svg data-id="${e.id}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <path data-id="${e.id}" d="M12.8995 6.85431L17.1421 11.0969L7.24264 20.9964H3V16.7538L12.8995 6.85431ZM14.3137 5.44009L16.435 3.31877C16.8256 2.92825 17.4587 2.92825 17.8492 3.31877L20.6777 6.1472C21.0682 6.53772 21.0682 7.17089 20.6777 7.56141L18.5563 9.68273L14.3137 5.44009Z"></path>
  </svg>
</button>
          </div>

        </div>
      </div>
    `);y.innerHTML=t.join(""),y.addEventListener("click",async e=>{const o=e.target;if(console.log(o),o.classList.contains("card__delete")||o.closest(".card__delete svg")||o.closest(".card__delete path")){const a=o.getAttribute("data-id");console.log("Deleting item with ID:",a),o.disabled=!0;try{M(a),console.log("Deletion finished successfully.")}catch(s){console.error("Error while deleting:",s)}o.disabled=!1}else if(o.classList.contains("card__edit")||o.closest(".card__edit svg")||o.closest(".card__edit path")){const a=o.getAttribute("data-id");console.log("Editing item with ID:",a);const s=n.find(c=>c.id===a);console.log(s),s&&(g.classList.toggle("visible"),D.value=s.url,L.value=s.titleValue,b.value=s.descriptionValue,I.checked=s.isPin,E.value=s.id)}})}let S=document.querySelector("button.button");S.addEventListener("click",()=>{p.classList.toggle("visible")});let $=document.querySelector("span.close-button");$.addEventListener("click",()=>{console.log("clicked"),p.classList.toggle("visible")});let x=document.querySelector("span.close-button-update");x.addEventListener("click",()=>{console.log("clicked"),g.classList.toggle("visible")});const w=document.getElementById("toast-container");function H(n,t,e){const o=document.createElement("div");o.classList.add("toast",e),o.textContent=n,w.appendChild(o),o.offsetHeight,o.style.opacity="1",setTimeout(()=>{o.style.opacity="0",o.addEventListener("transitionend",()=>{w.removeChild(o)})},t)}g.addEventListener("submit",async function(n){n.preventDefault();const t=E.value,e={url:D.value,titleValue:L.value,descriptionValue:b.value,isPin:I.checked,updatedAt:new Date};chrome.runtime.sendMessage({action:"updateData",data:e,id:t},o=>{console.log(o,"response"),o.success?(console.log("Data updated successfully"),g.classList.toggle("visible")):console.error("Failed to update data")})});
